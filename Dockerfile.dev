# Stage 1: Development
FROM node:18-alpine AS development
WORKDIR /app

RUN apk add --no-cache \
    libc6-compat

COPY package*.json ./
RUN npm install

COPY . .
RUN npx prisma generate

CMD ["npm", "run", "dev"]

# Stage 2: Production Builder
FROM node:18-alpine AS builder
WORKDIR /app

RUN apk add --no-cache \
    libc6-compat

COPY package*.json ./
RUN npm ci

COPY . .
RUN npx prisma generate

ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production
ENV SKIP_DB_CHECK=true

RUN npm run build

# Stage 3: Production Runner
FROM node:18-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN apk add --no-cache \
    libc6-compat

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/prisma ./prisma
COPY --from=builder /app/node_modules ./node_modules
COPY package.json ./

USER nextjs

EXPOSE 3000
ENV PORT 3000

CMD ["npm", "start"]